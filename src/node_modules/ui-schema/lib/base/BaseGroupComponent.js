let BaseComponent = require('./BaseComponent');
let map = require('lodash/map');
let {WebHookConstants} =  require('../../constants');
var configs = require('config');

class BaseGroupComponent extends BaseComponent {

    /**
     * Replace dataOptions with all new options
     */
    setDataOptions(dataOptions) {
        this.config.dataOptions = dataOptions;
        return this;
    }

    setValidators(validators) {
        this.config.validators = validators;
        return this;
    }

    setErrorMessages(errorMessages) {
        this.config.errorMessages = errorMessages;
        return this;
    }

    /**
     * Add new dataOptions to previous one
     */
    addDataOption(dataOption) {
        if (dataOption instanceof Array) {
            map(dataOption, (dataOptionItem, index) => {
                this.addDataOption(dataOptionItem)
            });
        } else {
            if (!this.config.dataOptions)
                this.config.dataOptions = [];
            this.config.dataOptions.push(dataOption);
        }
        return this;
    }

    setDataMaster(master_code, text_headercode, value_headercode) {
        this.setWebhook(
            '/api/masters/generic/get_dataassource/csid_static/' + master_code + '/?text=' + text_headercode + '&value=' + value_headercode
            , WebHookConstants.GET_METHOD);
        return this;
    }

    setWebhook(url, method = WebHookConstants.GET_METHOD, header, body) {
        this.config.webhook = {
            url, method, header, body
        };
        return this;
    }

    setSearch(args_array) {
        this.config.search = args_array;
        return this;
    }

    setDefaultValue(defaultValue) {
        this.config.defaultValue = defaultValue;
        return this;
    }
}

module.exports = BaseGroupComponent;
