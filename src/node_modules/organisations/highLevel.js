let models = require('sql-models');
let sequelize = require('sequelize');
let _includes = require("_includes");
let allowed = require("./allowed");

let FunctionList = {

    async _getAllOrganisations(attributes = {}, query = {}){
        let where = {};
        if (query.org_code) {
            where = Object.assign({}, where, {org_code: query.org_code});
        }
        return await models.db.organisations.findAll({where});
    },

    async fetchVendors(attributes = {}, auth_user_id, query = {}){
      // return new Promise((resolve, reject) => {
      let where = await allowed.get_allowed_vendors(auth_user_id)
        return await models.db.vw_vendors.findAll({
            attributes: {exclude: ['id']},
          where:{
            $and:[
              where
            ]
          }
        })
      //   _includes.seq_db.seq_raw(
      //     'SELECT le.* FROM org_legal_entities le, client_vendor cv where cv.le_id_b=le.le_id',
      //     { type: sequelize.QueryTypes.SELECT}
      // )
    },

    async fetchPositions(attributes = {}, auth_user_id, query = {}){
      // return new Promise((resolve, reject) => {

      let where = await allowed.get_allowed_positions(auth_user_id)

        return await models.db.org_positions.findAll(
          {
            where:{
              $and: {
                  where
              }
            }
          }
        );
    },

    async createNewOrganisation(object){
        return await models.db.organisations.create(object);
    },


};

exports.fun = FunctionList;
