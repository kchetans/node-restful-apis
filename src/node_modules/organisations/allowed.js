let models = require('sql-models');
let _includes = require("_includes");
let sequelize = require('sequelize');
exports = {
  async get_allowed_positions(user_id){
    // console.log("user_id",user_id)
    // user_id=52;
    let roles = await models.db.vw_roles.findAll({
      attributes:['role_code'],
      where: {
        user_id: user_id
      },
      raw: true
    })
    // console.log("roles",roles)
    let options = await models.db.vw_data_types.findAll({
      attributes:['option', 'value'],
      where: {
        user_id: user_id,
        $or: roles,
        data_type: 'positions'
      },
      raw: true
    })
    // console.log("options",options)
    let default_option = await models.db.wx_auth_data_types.findAll({
      attributes:[['default_value','option']],
      where: {
        data_type: 'positions'
      },
      raw: true
    })
    let all_options = options.concat(default_option)
    // let facilities = []
    let where = {
      $or: []
    }
    for(var i=0;i<all_options.length;i++){
      let option = all_options[i].option;
      switch(option){
        case 'none':
          where.$or.push({
            pos_id:{
              lte:0
            }
          })
          break;
        case 'constant':
          where.$or.push({
            pos_id:options[i].value
          })
          break;
        case 'juniors':
          let self_pids = await models.db.vw_employees.findAll({
            attributes:[['pos_id','pos_id'], ['pe_pos_id','pe_pos_id']],
            where:{
              user_id: user_id
            },
            raw:true
          });
          // console.log('self_pids',self_pids)
          let self_pid = '-1'
          for(var j=0;j<self_pids.length;j++){
            self_pid += ','+self_pids[j].pos_id;
            if(self_pids[j].pe_pos_id){
              self_pid += ','+self_pids[j].pe_pos_id;
            }
          }
          // console.log('self_pid',self_pid)
          let jr_pids = await _includes.seq_db.seq_raw(
              'CALL jr_positions("'+ self_pid +'");',
              { type: sequelize.QueryTypes.SELECT}
          )
          // console.log('jr_pids',jr_pids)
            if(jr_pids[0][0].jr_positions)
          where.$or.push(
            sequelize.fn('FIND_IN_SET', sequelize.col('pos_id'), jr_pids[0][0].jr_positions )
          )
          break;
      }
    }
    // console.log("where",  where)
    return where;
  },
  async get_allowed_vendors(user_id){
    // console.log("user_id",user_id)
    // user_id=52;
    let roles = await models.db.vw_roles.findAll({
      attributes:['role_code'],
      where: {
        user_id: user_id
      },
      raw: true
    })
    // console.log("roles",roles)
    let options = await models.db.vw_data_types.findAll({
      attributes:['option', 'value'],
      where: {
        user_id: user_id,
        $or: roles,
        data_type: 'vendors'
      },
      raw: true
    })
    // console.log("options",options)
    let default_option = await models.db.wx_auth_data_types.findAll({
      attributes:[['default_value','option']],
      where: {
        data_type: 'vendors'
      },
      raw: true
    })
    let all_options = options.concat(default_option)
    // let facilities = []
    let where = {
      $or: []
    }
    for(var i=0;i<all_options.length;i++){
      let option = all_options[i].option;
      switch(option){
        case 'none':
          where.$or.push({
            le_id:{
              lte:0
            }
          })
          break;
        case 'constant':
          where.$or.push({
            le_id:options[i].value
          })
          break;
        case 'all_self_le':
          let self_le = await models.db.employees.findAll({
            attributes:[['le_id','client_le_id']],
            where:{
              user_id: user_id
            },
            raw:true
          })
          console.log('self_le',self_le)
          where.$or.push({
            $or: self_le
          })
          break;
      }
    }
    // console.log("where",  where)
    return where;
  }
};

module.exports = exports;
