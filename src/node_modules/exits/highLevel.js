let models = require('sql-models');

let FunctionList = {

    async getAllExits(attributes, auth_user_id, paging){
        let {currentPage, pageSize} = paging || {};
        // console.log("paging => ", paging);
        let key = attributes.key || ""
        return await models.db.exit_requests.findAll(
            {
                where : {
                    $or: [
                        {
                            emp_code: {
                                $like: '%' + key + '%'
                            }
                        }
                    ]
                },
                limit : pageSize ? parseInt(`${pageSize}`) : undefined,
                offset: currentPage ? parseInt(currentPage) * parseInt(pageSize) : undefined,
            });
    },
    async getPageCount(attributes, auth_user_id, pageSize){
        let key   = attributes.key || ""
        let count = await models.db.exit_requests.count({
            where: {
                $or: [
                    {
                        emp_code: {
                            $like: '%' + key + '%'
                        }
                    }
                ]
            }
        });
        return _.ceil(count / pageSize);
    },
    async RejectExit(exit_id, auth_user_id){
      return await models.db.exit_requests.update({
          current_status: 'Rejected',
          updated_by: auth_user_id,
          updated_on: new Date()
      }, {
          where: {
              id: exit_id
          }
      });
    },
    async ApproveExit(exit_id, auth_user_id){
      let exit = await models.db.exit_requests.findOne({
        where:{
          id: exit_id
        }
      })
      await models.db.employees.update({
          DOL      : exit.dol,
          is_active: 0,
          updated_by: auth_user_id,
          updated_on: new Date()
      }, {
          where: {
              $or:[{pe_emp_code: exit.emp_code},
              {emp_code: exit.emp_code}]
          }
      });
      return await models.db.exit_requests.update({
          current_status: 'Approved',
          updated_by: auth_user_id,
          updated_on: new Date()
      }, {
          where: {
              id: exit_id
          }
      });
    }
}

exports.fun = FunctionList;
