let models = require('sql-models');
let allowed = require("./allowed");

let FunctionList = {

    async getAllEmployees(attributes,auth_user_id, paging){
        let {currentPage, pageSize} = paging || {};
        // console.log("paging => ", paging);
        let key    = attributes.key || ""
        let fac_id = attributes.facility_id || 0
        let where = await allowed.get_allowed_employees(auth_user_id);
        where  = {
          $and: [
            where,
            {
              $or: [
                {
                    full_name: {
                        $like: '%' + key + '%'
                    }
                },
                {
                    mobile: {
                        $like: '%' + key + '%'
                    }
                },
                {
                    pe_emp_code: {
                        $like: '%' + key + '%'
                    }
                },
                {
                    emp_code: {
                        $like: '%' + key + '%'
                    }
                }
              ]
            }
          ]
        }
        if (fac_id > 0) {
            where.facility_id = fac_id
        }
        return await models.db.vw_employees.findAll(
            {
                attributes: {exclude: ['id']},
                where     : where,
                limit     : pageSize ? parseInt(`${pageSize}`) : undefined,
                offset    : currentPage ? parseInt(currentPage) * parseInt(pageSize) : undefined,
            });
    },

    async GetEmployeeByEmpcode(empcode){
        return await models.db.vw_employees.findOne({
            where: {
                $or: [
                    {pe_emp_code: empcode},
                    {emp_code: empcode}
                ]
            }
        })
    },

    async GetEmployeeByEmpId(emp_id){
        return await models.db.vw_employees.findOne({
            where: {
                emp_id: emp_id
            }
        })
    },

    async getAllEmployeesForExport(attributes, paging){
        let {currentPage, pageSize} = paging || {};
        // console.log("paging => ", paging);
        let key = attributes.key || ""
        return await models.db.vw_emp_export.findAll(
            {
                attributes: {exclude: ['id']},
                where : {
                    $or: [
                        {
                            Employee_name: {
                                $like: '%' + key + '%'
                            }
                        },
                        {
                            Contact_No: {
                                $like: '%' + key + '%'
                            }
                        },
                        {
                            Employee_Code: {
                                $like: '%' + key + '%'
                            }
                        }
                    ]
                },
                limit : pageSize ? parseInt(`${pageSize}`) : undefined,
                offset: currentPage ? parseInt(currentPage) * parseInt(pageSize) : undefined,
            });
    },

    async getPageCount(attributes, auth_user_id, pageSize){
        let key    = attributes.key || ""
        let fac_id = attributes.facility_id || 0
        let where = await allowed.get_allowed_employees(auth_user_id);
        where  = {
          $and:[
            where,
            {
              $or: [
                {
                    full_name: {
                        $like: '%' + key + '%'
                    }
                },
                {
                    mobile: {
                        $like: '%' + key + '%'
                    }
                },
                {
                    pe_emp_code: {
                        $like: '%' + key + '%'
                    }
                },
                {
                    emp_code: {
                        $like: '%' + key + '%'
                    }
                }
              ]
            }
          ]
        }
        if (fac_id > 0) {
            where.facility_id = fac_id
        }
        let count = await models.db.vw_employees.count({
            where: where
        });
        return _.ceil(count / pageSize);
    },

    async createNewEmployee(object){
        return await models.db.employees.create(object);
    },

    async createNewEmployees(object){
        return await models.db.employees.bulkCreate(object);
    },

    async createGA(object, auth_user_id){
        object.current_status = 'Pending';
        object.created_by     = auth_user_id;
        object.created_on     = new Date();
        object.updated_by     = auth_user_id;
        object.updated_on     = new Date();
        var f_obj             = {
            form_code: "GA",
            form_data: JSON.stringify(object)
        }
        await models.db.forms_data.create(f_obj);
        // let olr_obj = {
        //   pe_org_id: 1,
        //   pe_le_id:1,
        // }
        // olr_obj =  Object.assign(olr_obj, obj)
        object.payroll_le_id = object.payroll_le_id || 1;
        return await models.db.olrs.create(object)
    },

    async createLeaver(object, auth_user_id){
        object.current_status = 'Pending';
        object.created_by     = auth_user_id;
        object.created_on     = new Date();
        object.updated_by     = auth_user_id;
        object.updated_on     = new Date();
        var f_obj             = {
            form_code: "Leaver",
            form_data: JSON.stringify(object)
        }
        await models.db.forms_data.create(f_obj);
        return await models.db.exit_requests.create(object)
        // return await models.db.employees.update({
        //     DOL      : object.dol,
        //     is_active: 0
        // }, {
        //     where: {
        //         pe_emp_code: object.emp_code
        //     }
        // });
    }
}

exports.fun = FunctionList;
