// /**
//  * Created by mysterio86 on 17/3/17.
//  */
// var cassandra = require('express-cassandra');
// //
// // console.log('\n Connecting to cassandra Localhost \n');
// // console.log('The name of the directory' + __dirname);
// // //Tell express-cassandra to use the cassandra-directory, and
// // //use bind() to load the cassandra using cassandra configurations.
// cassandra = cassandra.setDirectory(__dirname + '/cassandra');
// cassandra = cassandra.createClient({
//     clientOptions: {
//         contactPoints: ['127.0.0.1'],
//         protocolOptions: {port: 9042},
//         keyspace: 'workexv0',
//         queryOptions: {consistency: cassandra.consistencies.one}
//     },
//     ormOptions: {
//         defaultReplicationStrategy: {
//             class: 'SimpleStrategy',
//             replication_factor: 1
//         },
//         migration: 'safe',
//         createKeyspace: true
//     }
// });
//
// cassandra.connect(function (err) {
//     if (err) throw err;
//     console.log(cassandra.instance.Person);
//
//     // var MyModel = cassandra.loadSchema('Person', {
//     //     fields:{
//     //         name    : "text",
//     //         surname : "text",
//     //         age     : "int"
//     //     },
//     //     key:["name"]
//     // }, function(err, UserModel){
//     //     //the table in cassandra is now created
//     //     //the cassandra.instance.Person, UserModel or MyModel can now be used
//     //     console.log(cassandra.instance.Person);
//     //     console.log(cassandra.instance.Person === UserModel);
//     //     console.log(cassandra.instance.Person === MyModel);
//     // });
// });
// // .bind(
// //     {
// //         clientOptions: {
// //             contactPoints: ['127.0.0.1'],
// //             protocolOptions: {port: 9042},
// //             keyspace: 'workexv0',
// //             queryOptions: {consistency: cassandra.consistencies.one}
// //         },
// //         ormOptions: {
// //             //If your keyspace doesn't exist it will be created automatically
// //             //using the default replication strategy provided here.
// //             defaultReplicationStrategy: {
// //                 class: 'SimpleStrategy',
// //                 replication_factor: 1
// //             },
// //             migration: 'safe',
// //             createKeyspace: true
// //         }
// //     },
// //     function (err) {
// //         console.log("[error] :", err);
// //         if (err) console.log(err.message);
// //         else {
// //             console.log("[success : connected to localhost cassandra]");
// //         }
// //     }
// // );
//

var Cassandra = require('express-cassandra');
var models = Cassandra.createClient({
    clientOptions: {
        contactPoints: ['127.0.0.1'],
        protocolOptions: { port: 9042 },
        keyspace: 'workexv0',
        queryOptions: {consistency: Cassandra.consistencies.one}
    },
    ormOptions: {
        defaultReplicationStrategy : {
            class: 'SimpleStrategy',
            replication_factor: 1
        },
        migration: 'safe',
        createKeyspace: true
    }
});

models.connect(function (err) {
    if (err) throw err;

    var MyModel = models.loadSchema('Person', {
        fields:{
            name    : "text",
            surname : "text",
            age     : "int"
        },
        key:["name"],
        table_name: 'person'
    }, function(err, UserModel){

        var john = new models.instance.Person({
            name: "Mary",
            surname: "Doe",
            age: 31
        });
        john.save(function(err){
            if(err) {
                console.log(err);
                return;
            }
            console.log('Yuppiie!');
        });
        //the table in cassandra is now created
        //the cassandra.instance.Person, UserModel or MyModel can now be used
        // console.log(cassandra.instance.Person);
        // console.log(cassandra.instance.Person === UserModel);
        // console.log(cassandra.instance.Person === MyModel);
    });
});




module.exports = {
    cassandra: models
}