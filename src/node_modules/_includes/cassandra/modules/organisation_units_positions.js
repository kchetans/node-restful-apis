/**
 * Created by mysterio86 on 20/3/17.
 */
var models = require('../cs_db').cass_connection();

var sendJsonResponse = function (res, status, content) {
    res.status(status);
    res.json(content);
};

function findOrganisationUnitPostionByCode(req, res, callback) {
    let unit = models.instance.OrganisationUnitPositions
        .findOne({
            org_id: models.timeuuidFromString(req.params.org_id.toString()),
            ou_id: models.timeuuidFromString(req.params.ou_id.toString()),
            ou_pos_name: req.body.ou_pos_name.trim(),
            is_active: true
        }, function (err, ou_pos) {
            if (err)
                sendJsonResponse(res, '200', err.message);
            else {
                callback(req, res, ou_pos);
            }
        });
}

function checkAndCreateOrganisationUnitPosition(req, res, ou_pos) {

    if (ou_pos) {
        sendJsonResponse(res, '200', ou_pos);
    } else {
        let obj = {
            org_id: models.timeuuidFromString(req.params.org_id),
            ou_id: models.timeuuidFromString(req.params.ou_id),
            ou_code: req.body.ou_code,
            ou_pos_name: req.body.ou_pos_name,
            ou_pos_count: parseInt(req.body.ou_pos_count),
            ou_par_pos_id: models.timeuuidFromString(req.body.ou_par_pos_id),
            access_level: parseInt(req.body.access_level),
            org_name: req.body.org_name,
            created_by: models.timeuuidFromString('810d7c80-0a22-11e7-971e-036b8157e331'),
            updated_by: models.timeuuidFromString('810d7c80-0a22-11e7-971e-036b8157e331'),
        };
        let _ou_pos = new models.instance.OrganisationUnitPositions(obj);
        _ou_pos.save(function (err) {
            if (err)
                sendJsonResponse(res, '404', err.message);
            else
                sendJsonResponse(res, '202', _ou_pos.toJSON());
        });
    }

}

module.exports.createOrganisationUnitPositions = function (req, res) {

    if (!req.body)
        sendJsonResponse(res, '400', {err: "body is missing"});
    else {
        findOrganisationUnitPostionByCode(req, res, checkAndCreateOrganisationUnitPosition)
    }

    // var obj = {
    //     org_id: models.timeuuidFromString(req.params.org_id),
    //     ou_id: models.timeuuidFromString(req.params.ou_id),
    //     ou_code: req.body.ou_code,
    //     ou_pos_name: req.body.ou_pos_name,
    //     ou_pos_count: parseInt(req.body.ou_pos_count),
    //     ou_par_pos_id: null,
    //     access_level: parseInt(req.body.access_level),
    //     is_active: true,
    //     org_name: req.body.org_name,
    //     created_by: models.timeuuidFromString('810d7c80-0a22-11e7-971e-036b8157e331'),
    //     updated_by: models.timeuuidFromString('810d7c80-0a22-11e7-971e-036b8157e331'),
    // };
    // var newou = new models.instance.OrganisationUnitPositions(obj);
    // newou.save(function (err) {
    //     if (err)
    //         sendJsonResponse(res, '404', err.message);
    //     else
    //         sendJsonResponse(res, '202', newou.toJSON());
    // });
};

module.exports.getOrganisationPositions = function (req, res) {
    models.instance.OrganisationUnitPositions.find({org_id: models.timeuuidFromString(req.params.org_id)}, function (err, results) {
        if (err)
            sendJsonResponse(res, '404', err.message);
        else {
            var obj = []
            results.forEach(function (result, index) {
                obj.push(result.toJSON());
            });
            sendJsonResponse(res, '202', obj);
        }
    });
};


