var models = require('../cs_db').cass_connection();

var sendJsonResponse = function (res, status, content) {
    res.status(status);
    res.json(content);
};

module.exports.createOrganisationEntityEmployee = function (req, res) {

    if (!req.body)
        sendJsonResponse(res, '400', {err: "body content is required"})
    else
        findOrganisationEmployee(req, res, checkAndCreateOrganisationEmployee)

    // var obj = {
    //     org_id: models.timeuuidFromString(req.params.org_id),
    //     ou_ent_id: models.timeuuidFromString(req.params.ou_ent_id),
    //     ou_pos_id: models.timeuuidFromString(req.body.ou_pos_id),
    //     ou_pos_name: req.body.ou_pos_name,
    //     // emp_boss_id: models.timeuuidFromString(req.body.emp_boss_id),
    //     emp_boss_name: req.body.emp_boss_name,
    //     user_id: models.timeuuidFromString(req.body.user_id),
    //     user_full_name: req.body.user_full_name,
    //     is_active: true,
    //     created_by: models.timeuuidFromString('810d7c80-0a22-11e7-971e-036b8157e331'),
    //     updated_by: models.timeuuidFromString('810d7c80-0a22-11e7-971e-036b8157e331'),
    // };
    // var newou = new models.instance.OrganisationEmployees(obj);
    // // console.log(newou);
    // newou.save(function (err) {
    //     if (err)
    //         sendJsonResponse(res, '404', err.message);
    //     else
    //         sendJsonResponse(res, '202', newou.toJSON());
    // });
};

module.exports.getOrganisationEntityEmployees = function (req, res) {
    models.instance.OrganisationEmployees.find({
        org_id: models.timeuuidFromString(req.params.org_id),
        ou_ent_id: models.timeuuidFromString(req.params.ou_ent_id)
    }, function (err, results) {
        if (err)
            sendJsonResponse(res, '404', err.message);
        else {
            var obj = []
            results.forEach(function (result, index) {
                obj.push(result.toJSON());
            });
            sendJsonResponse(res, '202', obj);
        }
    });
};

function findOrganisationEmployee(req, res, callback) {
    let unit = models.instance.OrganisationEmployees
        .findOne({
            org_id: models.timeuuidFromString(req.params.org_id),
            ou_ent_id: models.timeuuidFromString(req.params.ou_ent_id),
            ou_pos_id: models.timeuuidFromString(req.body.ou_pos_id),
            user_id: models.timeuuidFromString(req.body.user_id),
            is_active: true
        }, function (err, ent_emp) {
            if (err)
                sendJsonResponse(res, '200', err.message);
            else {
                callback(req, res, ent_emp);
            }
        });
}

function checkAndCreateOrganisationEmployee(req, res, ou_emp) {

    if (ou_emp) {
        sendJsonResponse(res, '200', ou_emp);
    } else {
        let obj = {
            org_id: models.timeuuidFromString(req.params.org_id),
            ou_ent_id: models.timeuuidFromString(req.params.ou_ent_id),
            ou_pos_id: models.timeuuidFromString(req.body.ou_pos_id),
            ou_pos_name: req.body.ou_pos_name,
            emp_boss_id: models.timeuuidFromString(req.body.emp_boss_id),
            emp_boss_name: req.body.emp_boss_name,
            user_id: models.timeuuid(), //todo
            user_full_name: req.body.user_full_name,
            is_active: true,
            created_by: models.timeuuidFromString('810d7c80-0a22-11e7-971e-036b8157e331'),
            updated_by: models.timeuuidFromString('810d7c80-0a22-11e7-971e-036b8157e331'),
        };
        let _ou_emp = new models.instance.OrganisationEmployees(obj);
        _ou_emp.save(function (err) {
            if (err)
                sendJsonResponse(res, '404', err.message);
            else
                sendJsonResponse(res, '202', _ou_emp.toJSON());
        });
    }

}