/**
 * Created by mysterio86 on 17/3/17.
 */

var validation = require('./ValidationFns');
var options = {min: 3, max: undefined};

module.exports = {
    fields: {
        org_id: {
            type: "timeuuid",
            default: {"$db_function": "now()"}
        },
        org_name: {
            type: "text",
            rule: {
                required: true,
                validators: [
                    {
                        validator: validation.isEmpty,
                        message: function (value) {
                            return 'Please provide the organisation name';
                        }
                    },
                    {
                        validator: function (value) {
                            return validation.isLength(value, options);
                        },
                        message: function (value) {
                            return 'Organisation Name should be atleast ' + options.min + ' alphabets long!'
                        }
                    }
                ]
            }
        },
        org_code: {
            type: "text",
            rule: {
                required: true,
                validators: [
                    {
                        validator: validation.isEmpty,
                        message: function (value) {
                            return 'Please provide the organisation code';
                        }
                    },
                    {
                        validator: function (value) {
                            return validation.isLength(value, options);
                        },
                        message: function (value) {
                            return 'Organisation code should be atleast ' + options.min + ' alphabets long!'
                        }
                    },
                    {
                        validator: validation.containsSpace,
                        message: function (value) {
                            return 'Organisation code should not contain space'
                        }
                    }
                ]
            }
        },
        org_description: {
            type: "text",
            rule: {
                validator: validation.isEmpty,
                message: function (value) {
                    return 'Please provide the organisation description';
                }
            }
        },
        org_type: {
            type: "text", rule: {
                validator: validation.isEmpty,
                message: function (value) {
                    return 'Please provide the organisation description';
                }
            }
        },
        created_by: {type: "timeuuid"},
        created_on: {
            type: "timestamp",
            default: {"$db_function": "toTimestamp(now())"}
        },
        deleted_by: {type: "timeuuid"},
        deleted_on: {
            type: "timestamp",
            default: {"$db_function": "toTimestamp(now())"}
        },
        updated_by: {type: "timeuuid"},
        updated_on: {
            type: "timestamp",
            default: {"$db_function": "toTimestamp(now())"}
        },
        org_alias: "text",
        is_active: {
            type: "boolean",
            default: true,
            rule: {
                required: true
            }
        },
        org_head: {
            type: "text",
            rule: {
                required: true
            }
        },
        org_image: "blob",
        org_img_length: "int",
        org_logo: "blob",
        org_logo_length: "int",
    },
    key: [["org_code"], "org_name"],
    table_name: "organisations",
    org_ou: {

        ou_code: "organisation",
        ou_description: "Definition: The unit representing the upper most node of organisation",
        ou_name: "Unit : Organisation"
    },
    materialized_views: {
        orgs_by_id: {
            select: ["org_id", "org_code", "is_active", "org_name", "org_type", "org_head"],
            key : ["org_id", "org_code", "org_name"],
        },
        orgs_by_status: {
            select: ["org_id", "org_code", "is_active", "org_name", "org_type", "org_head"],
            key : ["is_active", "org_code", "org_name"],
        }
    },

}

// module.exports = {
//     fields: {
//         org_id: {
//             type: "timeuuid",
//             default: {"$db_function": "now()"}
//         },
//         org_name: {type: "text"},
//         org_description: {type: "text"},
//         org_type: {type: "text"},
//         created_by: {type: "timeuuid"},
//         created_on: {
//             type: "timestamp",
//             default: {"$db_function": "toTimestamp(now())"}
//         },
//         deleted_by: {type: "timeuuid"},
//         deleted_on: {
//             type: "timestamp",
//             default: {"$db_function": "toTimestamp(now())"}
//         },
//         updated_by: {type: "timeuuid"},
//         updated_on: {
//             type: "timestamp",
//             default: {"$db_function": "toTimestamp(now())"}
//         },
//         org_alias: "text",
//         is_active: "boolean",
//         org_head: "text",
//         org_image: "blob",
//         org_img_length: "int",
//         org_logo: "blob",
//         org_logo_length: "int",
//     },
//     key: [["org_id", "org_name"], "org_type"],
//     clustering_order: {
//         "org_type": "asc"
//     },
//     table_name: "organisations"
// }