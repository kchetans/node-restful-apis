var models = require('express-cassandra');
var router = require('./routes/organisations');

//Tell express-cassandra to use the cassandra-directory, and
//use bind() to load the cassandra using cassandra configurations.
var path = __dirname;
console.log('__dirname ', __dirname);
// class Cassandra {
//     constructor() {
//         this.isConnected = false;
//         this.models = null;
//         this.connect();
//     };
//
//     connect() {
//         this.models = models.setDirectory(path + '/models').bind(
//             {
//                 clientOptions: {
//                     contactPoints: ['127.0.0.1'],
//                     protocolOptions: {port: 9042},
//                     keyspace: 'workexv0',
//                     queryOptions: {consistency: models.consistencies.one}
//                 },
//                 ormOptions: {
//                     //If your keyspace doesn't exist it will be created automatically
//                     //using the default replication strategy provided here.
//                     defaultReplicationStrategy: {
//                         class: 'SimpleStrategy',
//                         replication_factor: 1
//                     },
//                     migration: 'safe',
//                     createKeyspace: true
//                 }
//             },
//             function (err) {
//                 if (err) console.log(err.message);
//                 else {
//                     // console.log(models.modelInstance.Organisations._properties.schema.fields);
//                     // console.log('Models Directory', models.directory);
//                     findPerson();
//                     // console.log(models.timeuuid());
//                     findOrganisation();
//                     // organisations();
//                 }
//             }
//         );
//     }
// }
//
// var cass = new Cassandra();
// var Cassandra = function () {
//
//     var self = this;
//     self.isConnected = false;
//     self.connect = function () {
//
//     }
// }
//
// class Cassandra {
//
//     constructor() {
//     if(!this.cassandra){
//         this.cassandra
//     }
//         return this.cassandra;
//     }
//
//     static getInstance() {
//         return new Cassandra();
//     }
// }

// var model = new Cassandra();
// model.isConnected;
// models.setDirectory(path + '/models').bind(
//     {
//         clientOptions: {
//             contactPoints: ['127.0.0.1'],
//             protocolOptions: {port: 9042},
//             keyspace: 'workexv0',
//             queryOptions: {consistency: models.consistencies.one}
//         },
//         ormOptions: {
//             //If your keyspace doesn't exist it will be created automatically
//             //using the default replication strategy provided here.
//             defaultReplicationStrategy: {
//                 class: 'SimpleStrategy',
//                 replication_factor: 1
//             },
//             migration: 'safe',
//             createKeyspace: true
//         }
//     },
//     function (err) {
//         if (err) console.log(err.message);
//         else {
//             // console.log(models.modelInstance.Organisations._properties.schema.fields);
//             // console.log('Models Directory', models.directory);
//             findPerson();
//             console.log(models.timeuuid());
//             findOrganisation();
//             console.log('I am finished connection');
//             // organisations();
//         }
//     }
// );

// var connection_cassandra;
// var cass_connection = function () {
//
//     if (!connection_cassandra) {
//         console.log('Instanciating the connection again ');
//         console.log('Instanciating the connection again ');
//         console.log('Instanciating the connection again ');
//         console.log('Instanciating the connection again ');
//         connection_cassandra = models.setDirectory(path + '/models').bind(
//             {
//                 clientOptions: {
//                     contactPoints: ['127.0.0.1'],
//                     protocolOptions: {port: 9042},
//                     keyspace: 'workexv0',
//                     queryOptions: {consistency: models.consistencies.one}
//                 },
//                 ormOptions: {
//                     //If your keyspace doesn't exist it will be created automatically
//                     //using the default replication strategy provided here.
//                     defaultReplicationStrategy: {
//                         class: 'SimpleStrategy',
//                         replication_factor: 1
//                     },
//                     migration: 'safe',
//                     createKeyspace: true
//                 }
//             },
//             function (err) {
//                 if (err) console.log(err.message);
//                 else {
//                     // console.log(models.modelInstance.Organisations._properties.schema.fields);
//                     // console.log('Models Directory', models.directory);
//                     findPerson();
//                     console.log(models.timeuuid());
//                     findOrganisation();
//                     // organisations();
//                 }
//             }
//         );
//     }
//     return connection_cassandra;
// }


function findPerson() {
    models.instance.Person.findOne({name: 'Mary'}, function (err, john) {
        if (err) {
            console.log(err);
            return;
        }
        //Note that returned variable john here is an instance of your model,
        //so you can also do john.delete(), john.save() type operations on the instance.
        console.log('Found ' + john.name + ' to be ' + john.age + ' years old!');
    });
}

function findOrganisation() {
    console.log("What THE FUCK IS THIS", models.timeuuidFromString('e0d621f0-0b92-11e7-90c0-d3f48f3ff6b5'));
    models.instance.Organisations.findOne({
        org_id: models.timeuuidFromString('fe615100-0b96-11e7-90c0-d3f48f3ff6b5')
    }, function (err, result) {
        if (err) {
            console.log(err);
            return;
        }
        console.log(result.org_name);
        // result = result[0];
        // console.log('Found ' + result.org_id + ' and the head ' + result.org_head + ' is awesome!');
    });
}

module.exports = {
    // cass_db: models,
    router: router,
    // cass_connection: cass_connection
}