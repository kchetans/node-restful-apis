/**
 * Created by chirag on 12/10/14.
 */

let express = require('express');
let router = express.Router();
let bodyParser = require('body-parser')
let csv = require('express-csv');
let configs = require('config');
let url = require('url');
let exphbs  = require('express-handlebars');
let cache = require('memory-cache');
// var oauthserver = require('node-oauth2-server');

let app = express();

app.configs = configs;

let hbs = exphbs.create({
    // Specify helpers which are only registered on this instance.
    helpers: {
        dateFormat: require('handlebars-dateformat'),
        firstChar: function(str){return str.slice(0,1).toUpperCase();},
        firstCaps: function(arr){return arr[0].toUpperCase().slice(0,1) + arr[0].slice(1, arr[0].length)},
        ifMulti: function(a,b,c, options){ if(a || b || c){ options.fn(this); } else{ return options.inverse(this); } },
        splitAndCap : function(strArr){ let str = strArr[0]; let strArray = str.split("_"); return strArray.map(function(word){ return word.toUpperCase().slice(0,1) + word.slice(1, word.length)}).join(" ");}
    }
});


app.engine('handlebars', hbs.engine);

app.set('view engine', 'handlebars');


// CORS Policy
app.use(function (req, res, next) {
    res.header("Access-Control-Allow-Origin", "*"); //http://localhost:8100
    res.header("Access-Control-Allow-Credentials", "true");
    res.header("Access-Control-Allow-Methods", "POST,GET,PUT,DELETE,OPTIONS");
    res.header("Access-Control-Allow-Headers", "Origin,X-Requested-With,Content-Type,Accept,Username,SourceKey,Authorization,Wx-USER-TOKEN");
    next();
});

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({
    extended: false
}));
app.use(function (req, res, next) {
    console.log(req.method, url.parse(req.url).pathname);
    next();
});

app.Response = function () {
    var self = {};
    self.status = '';
    self.isError = true;
    self.data = {};
    self.error = null;
    return self;
}

app.ErrorResponse = function (msg, stackTrace, ecode) {
    var self = app.Response.call();
    self.status = 'err';
    self.msg = msg;
    self.isError = true;
    self.error = stackTrace;
    self.error.msg = msg;
    self.ecode = ecode;
    return self;
};

app.SuccessResponse = function (_data) {
    var self = app.Response.call();
    self.data = _data;
    self.status = 'success';
    self.msg = 'success';
    self.isError = false;
    return self.data;
};


app.getFn = function (mainPath) {
    return function (path) {
        return mainPath + path;
    }
};

app.sendRaw = function (req, res, data) {
    // console.log('Response: ' + JSON.stringify(data));
    res.send(data);
};

app.send = function (req, res, data) {
    // console.log('Response: ' + JSON.stringify(data));
    res.send(new app.SuccessResponse(data));
};

app.sendCSV = function (req, res, rows, flds, filename) {
    var data = []
    var item = []
    var fields = []

    if (rows.length > 0) {
        for (var key in rows[0]) {
            fields.push(key);
        }
        data.push(fields);
    }

    if (flds) {
        if (flds.length > 0)
            fields = flds;
    }

    for (var i = 0; i < rows.length; i++) {
        item = [];
        for (var j = 0; j < fields.length; j++) {
            item.push(rows[i][fields[j]]);
        }
        data.push(item);
    }
    var list = req.url.split('/');
    //var name = 'filename_';
    if (filename == undefined) {
        filename = 'download'
    }
    filename.replace(/\s+/g, '-').toLowerCase()
    var name = [filename + '_', Date.now()].join('')
    //for(var i=(list.length-1); i>=0; i-- ){
    //    if(list[i] == '')
    //        continue;
    //    else
    //        name += list[i];
    //        break;
    //}

    res.setHeader('Content-disposition', 'attachment; filename=' + name + '.csv');
    res.setHeader('Content-Type', 'text/csv');
    res.csv(data);
}

module.exports = app;
