/**
 * Created by chirag on 29/06/15.
 */

var db = {};

db.dates = {};
db.dates.full_date = function(_datetime) {
    now_obj = {};
    _datetime = new Date(_datetime);
    var _date = new Date(_datetime.getFullYear(), _datetime.getMonth(), _datetime.getDate());
    _date.setTime( _date.getTime() - _date.getTimezoneOffset()*60*1000 ); // Ensure We GET DATE AS PER UTC TIME

    now_obj.datetime = _datetime.getTime();
    now_obj.date = _date.getTime();
    now_obj.datejs = _date;
    now_obj.datetimejs = _datetime;
    now_obj.month = _datetime.getMonth();
    now_obj.year = _datetime.getFullYear();
    now_obj.day = _datetime.getDate();
    return now_obj;
};

db.dates.full_date_now = function() {
    return db.dates.full_date(new Date());
}

db.dates.full_date_from_ms = function(ms) {
    return db.dates.full_date(new Date(ms));
}

db.dates.isDate = function(dateArg) {
    var t = (dateArg instanceof Date) ? dateArg : (new Date(dateArg));
    return !isNaN(t.valueOf());
}

db.dates.isValidRange = function(minDate, maxDate) {
    return (new Date(minDate) <= new Date(maxDate));
}

db.dates.formatDate = function(date) {
    var d = new Date(date),
        month = '' + (d.getMonth() + 1),
        day = '' + d.getDate(),
        year = d.getFullYear();

    //if (month.length < 2) month = '0' + month;
    //if (day.length < 2) day = '0' + day;
    return [year, month, day].join('-');
}

db.dates.getDates = function(startDt, endDt) {
    var error = ((db.dates.isDate(endDt)) && (db.dates.isDate(startDt)) && db.dates.isValidRange(startDt, endDt)) ? false : true;
    var between = [];
    //console.log(startDt);
    //console.log(endDt);
    if (error) console.log('error occured!!!... Please Enter Valid Dates');
    else {
        var currentDate = new Date(startDt),
            end = new Date(endDt);
        while (currentDate <= end) {
            var d = db.dates.formatDate(new Date(currentDate));
            between.push(db.dates.full_date(d));
            currentDate.setDate(currentDate.getDate() + 1);
        }
    }
    console.log(between);
    return between;
};

db.dates.getBetweenMonths_Year=function(st_date,end_date){
    var datearray=db.dates.getDates(new Date(st_date),new Date(end_date));
    var obj={
        err:undefined,
        data:[]
    }
    if(datearray.length<=0){
        obj.err='Invalid date range';
    }
    for(i=0;i<datearray.length;i++) {
        if (obj.data.length > 0) {
            var flag = false;
            for (j = 0; j < obj.data.length; j++) {
                if (obj.data[j].Month == datearray[i].month + 1
                    && obj.data[j].Year == datearray[i].year) {
                    flag = true;
                    break;
                }
            }
            if (!flag) {
                obj.data.push({Month: datearray[i].month + 1, Year: datearray[i].year});
            }

        }
        else {
            obj.data.push({Month: datearray[i].month + 1, Year: datearray[i].year});
        }
    }
    return obj;

};

module.exports = db;
