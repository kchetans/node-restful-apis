let models  = require('sql-models');
let allowed = require("./allowed");

let FunctionList = {

    async getAllFacilties(attributes, auth_user_id, paging){
        let {currentPage, pageSize} = paging || {};
        // console.log("paging => ", paging);
        let key   = attributes.key || ""
        let where = await allowed.get_allowed_facilities(auth_user_id)
        return await models.db.vw_facilities.findAll(
            {
                attributes: {exclude: ['id']},
                where     : {
                    $and: [
                        where,
                        {
                            $or: [
                                {
                                    facility_name: {
                                        $like: '%' + key + '%'
                                    }
                                },
                                {
                                    mgr_contact: {
                                        $like: '%' + key + '%'
                                    }
                                },
                                {
                                    location: {
                                        $like: '%' + key + '%'
                                    }
                                },
                                {
                                    mgr_name: {
                                        $like: '%' + key + '%'
                                    }
                                }
                            ]
                        }
                    ]
                },
                limit     : pageSize ? parseInt(`${pageSize}`) : undefined,
                offset    : currentPage ? parseInt(currentPage) * parseInt(pageSize) : undefined,
            });
    },

    async getPageCount(attributes, auth_user_id, pageSize){
        let key   = attributes.key || ""
        let where = await allowed.get_allowed_facilities(auth_user_id)
        let count = await models.db.vw_facilities.count({
            where: {
                $and: [
                    where, {
                        $or: [
                            {
                                facility_name: {
                                    $like: '%' + key + '%'
                                }
                            },
                            {
                                mgr_contact: {
                                    $like: '%' + key + '%'
                                }
                            },
                            {
                                location: {
                                    $like: '%' + key + '%'
                                }
                            },
                            {
                                mgr_name: {
                                    $like: '%' + key + '%'
                                }
                            }
                        ]
                    }]
            }
        });
        return _.ceil(count / pageSize);
    },

    async getFacilityByID(facility_id){
        return await models.db.vw_facilities.findOne({
            where: {
                facility_id: facility_id
            }
        })
    },

    async createFacility(object){
        object.le_id         = object.le_id || 1;
        object.facility_code = object.facility_code || _.snakeCase(object.facility_name);
        object.address_line1 = object.address_line1 || "address_line1";
        object.city          = object.city || "city";
        object.country       = object.country || "country";
        object.state         = object.state || "state";
        object.pincode       = object.pincode || "pincode";
        return await models.db.facility.create(object)
    }
};

exports.fun = FunctionList;
