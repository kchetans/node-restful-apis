let request = require('request');
let chalk = require('chalk');
let config = require('config');
let format = require("string-template");
let should_send_sms = config.get('send_sms') || false;
let smsMessages = require('../../constants/sms-messages.json');
let {otp: otpMessage, invite, request_review} = smsMessages;
let Communications = require('../../mongo-models/Communications');

let url = "http://103.16.142.107:55/api/mt/SendSMS?user=workex&password=workex&senderid=WORKEX&channel=Trans&DCS=0&flashsms=0&number=919871557500&text=test%20message&route=08";

module.exports = {

    sendInvite(mobile_no, name) {
        let msg = format(invite, {name, app_url: "PLAY_STORE_APP_URL"});
        this.sendPromotionalSms(mobile_no, msg);
    },

    sendRequestReview(mobile_no, askedPersonNmae, name, message, reviewUrl, review_id){
        let msg = format(request_review, {askedPersonNmae, name, message, reviewUrl});
        this.sendPromotionalSms(mobile_no, msg);
    },

    sendOtp(mobile_no, otp, isFirstTime){
        let user2Factor = true;
        if (should_send_sms && user2Factor) {
            let template = "LOGINOTP";
            let api_key = "a2243417-7a7b-11e7-94da-0200cd936042";
            let url = `https://2factor.in/API/V1/${api_key}/SMS/${mobile_no}/${otp}/${template}`;

            let comm = new Communications({mode: 'sms', type: 'transcational', template: template, to: mobile_no, provider: '2factor', status: 'pending'});
            comm.save();

            request({
                uri: url,
                method: 'GET'
            }, function (error, response, body) {
                comm.status_udpate_time = Date.now();
                
                if (error){
                    console.log("OTP SMS ERROR :", error);
                    comm.status = 'devlivered';
                }
                if (body){
                    console.log("OTP SMS : ", body);
                    comm.status = 'failed';
                }
                comm.save();
            });
        } else {
            let msg = format(otpMessage, {otp});
            this.sendSms(mobile_no, msg);
        }

    },

    sendSms(mobile, msg, type = 'TEXT', callback){
        if (should_send_sms) {
            let url = 'http://enterprise.smsgupshup.com/GatewayAPI/rest?method=SendMessage&send_to=' + mobile + '&msg=' +
                msg + `&msg_type=${type}&userid=2000169768&auth_scheme=plain&password=y4ARNv&v=1.1&format=text`;

            
            let comm = new Communications({mode: 'sms', type: 'transcational', template: msg, to: mobile, provider: 'gupshup', status: 'pending'});
            comm.save();

            request({
                uri: url,
                method: 'GET'
            }, function (error, response, body) {
                comm.status_udpate_time = Date.now();

                if (error){
                    console.log(chalk.red("SMS :"), error);
                    comm.status = 'falied';
                }
                if (body){
                    console.log("SMS :", body);
                    comm.status = 'delivered';
                }
                if (!error) {
                    // console.log(response);
                    if (callback) {
                        callback(response)
                    }
                } else {
                    // console.error(error);
                }

                comm.save();
            });
        } else {
            console.log(chalk.red("SMS will not be send for this env config"), `your sms is for mobile no ${mobile} : ` + msg);
        }
    },

    sendPromotionalSms(mobile, msg, type = 'TEXT', callback){
        console.log("msg", msg);
        if (should_send_sms) {
            let url = 'http://enterprise.smsgupshup.com/GatewayAPI/rest?method=SendMessage&send_to=' + mobile + '&msg=' +
                msg + `&msg_type=${type}&userid=2000172443&auth_scheme=plain&password=promotionalworkex&v=1.1&format=text`;

            console.log("url", url);


            let comm = new Communications({mode: 'sms', type: 'promotional', template: msg, to: mobile, provider: 'gupshup', status: 'pending'});
            comm.save();

            request({
                uri: url,
                method: 'GET'
            }, function (error, response, body) {
                comm.status_udpate_time = Date.now();
                if (error){
                    console.log(chalk.red("SMS PROMOTIONAL :"), error);
                    comm.status = 'falied';
                }
                if (body){
                    console.log("SMS PROMOTIONAL ERROR :", body);
                    comm.status = 'delivered';
                }
                if (!error) {
                    // console.log(response);
                    if (callback) {
                        callback(response)
                    }
                } else {
                    // console.error(error);
                }

                comm.save();
            });
        } else {
            console.log(chalk.red("SMS will not be send for this env config"), `your sms is for mobile no ${mobile} : ` + msg);
        }
    },

};
